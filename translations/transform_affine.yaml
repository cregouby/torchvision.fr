title:
  original: Apply affine transformation on an image keeping image center invariant
  translation: Applique une transformation affine sur l'image, en laissant son centre invariant.
arguments:
  img:
    original: A \code{magick-image}, \code{array} or \code{torch_tensor}.
    translation: Une \code{magick-image}, \code{array} ou un \code{torch_tensor}.
  angle:
    original: |-
      (float or int): rotation angle value in degrees,
      counter-clockwise.
    translation: |-
      (numérique): angle de rotation en degrés, dans le sens anti-horaire
  translate:
    original: |-
      (tuple, optional): tuple of maximum absolute fraction for
      horizontal and vertical translations. For example translate=(a, b), then
      horizontal shift is randomly sampled in the range
      -img_width * a < dx < img_width * a and vertical shift is randomly sampled
      in the range -img_height * b < dy < img_height * b. Will not translate by
      default.
    translation:  |-
      (paire de valeurs, optionnel): fractions maximum absolue de translation
      horizontale et verticale. par exemple translate=(a, b), then
      horizontal shift is randomly sampled in the range
      -img_width * a < dx < img_width * a and vertical shift is randomly sampled
      in the range -img_height * b < dy < img_height * b. Will not translate by
      default.
  scale:
    original: |-
      (tuple, optional): scaling factor interval, e.g (a, b), then
      scale is randomly sampled from the range a <= scale <= b. Will keep
      original scale by default.
    translation: ~
  shear:
    original: |-
      (sequence or float or int, optional): Range of degrees to select
      from. If shear is a number, a shear parallel to the x axis in the range
      (-shear, +shear) will be applied. Else if shear is a tuple or list of 2
      values a shear parallel to the x axis in the range \verb{(shear[1], shear[2])}
      will be applied. Else if shear is a tuple or list of 4 values, a x-axis
      shear in \verb{(shear[1], shear[2])} and y-axis shear in \verb{(shear[3], shear[4])}
      will be applied. Will not apply shear by default.
    translation: ~
  resample:
    original: |-
      (int, optional): An optional resampling filter. See interpolation
      modes.
    translation: ~
  fillcolor:
    original: |-
      (tuple or int): Optional fill color (Tuple for RGB Image and
      int for grayscale) for the area outside the transform in the output image
      (Pillow>=5.0.0). This option is not supported for Tensor input. Fill value
      for the area outside the transform in the output image is always 0.
    translation: ~
description:
  original: |
    Apply affine transformation on an image keeping image center invariant
  translation: ~
seealso:
  original: "Other transforms: \n\\code{\\link{transform_adjust_brightness}()},\n\\code{\\link{transform_adjust_contrast}()},\n\\code{\\link{transform_adjust_gamma}()},\n\\code{\\link{transform_adjust_hue}()},\n\\code{\\link{transform_adjust_saturation}()},\n\\code{\\link{transform_center_crop}()},\n\\code{\\link{transform_color_jitter}()},\n\\code{\\link{transform_convert_image_dtype}()},\n\\code{\\link{transform_crop}()},\n\\code{\\link{transform_five_crop}()},\n\\code{\\link{transform_grayscale}()},\n\\code{\\link{transform_hflip}()},\n\\code{\\link{transform_linear_transformation}()},\n\\code{\\link{transform_normalize}()},\n\\code{\\link{transform_pad}()},\n\\code{\\link{transform_perspective}()},\n\\code{\\link{transform_random_affine}()},\n\\code{\\link{transform_random_apply}()},\n\\code{\\link{transform_random_choice}()},\n\\code{\\link{transform_random_crop}()},\n\\code{\\link{transform_random_erasing}()},\n\\code{\\link{transform_random_grayscale}()},\n\\code{\\link{transform_random_horizontal_flip}()},\n\\code{\\link{transform_random_order}()},\n\\code{\\link{transform_random_perspective}()},\n\\code{\\link{transform_random_resized_crop}()},\n\\code{\\link{transform_random_rotation}()},\n\\code{\\link{transform_random_vertical_flip}()},\n\\code{\\link{transform_resize}()},\n\\code{\\link{transform_resized_crop}()},\n\\code{\\link{transform_rgb_to_grayscale}()},\n\\code{\\link{transform_rotate}()},\n\\code{\\link{transform_ten_crop}()},\n\\code{\\link{transform_to_tensor}()},\n\\code{\\link{transform_vflip}()}\n"
  translation: ~
untranslatable:
- alias
- name
- keyword
- concept
- usage
